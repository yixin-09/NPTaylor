(FPCore (x y z a b c i j)
:name "gsl_sf_hyperg_2F1_0"
:pre (and (and (<= 2.50421200940156e-1 x) (<= x 2.50895431130010e-1)) (and (<= -.521878746786540e4 y) (<= y 1.57300812259061e9)) (and (<= -.440187890620324e4 z) (<= z -.717828744130521e1)) (and (<= -.631625810698902e-3 a) (<= a 1.28960000031040e5)) (and (<= -.316378197840957e4 b) (<= b 9.53726586701360e8)) (and (<= -.316378197840957e4 c) (<= c 9.53726586701360e8)) (and (<= 9.02052533367375e0 i) (<= i 3.44975047110060e3)) (and (<= 5.99367707867065e0 j) (<= j 4.16000000049270e3)))
(+ (* (* (+ (* y x) (/ z a)) x) b) (* c (+ (* (/ i j) x) 1.00000000000000e0))))
(FPCore (x y)
:name "gsl_sf_hyperg_2F1_1"
:pre (and (and (<= 3.00000000000000e0 x) (<= x 3.40000000000000e1)) (and (<= 1.99005583991942e0 y) (<= y 1.99189843450392e0)))
(- (- x y) 2.00000000000000e0))
(FPCore (x y z a)
:name "gsl_sf_hyperg_2F1_2"
:pre (and (and (<= 9.00000000000000e0 x) (<= x 1.15600000000000e3)) (and (<= 1.99005583991942e0 y) (<= y 1.99189843450392e0)) (and (<= 3.99787869538542e0 z) (<= z 4.00381023165580e0)) (and (<= 3.00000000000000e0 a) (<= a 3.40000000000000e1)))
(- (* x 3.00000000000000e0) (* (+ (+ y z) 6.00000000000000e0) a)))
(FPCore (x y)
:name "gsl_sf_hyperg_2F1_3"
:pre (and (and (<= -.100105382022156e0 x) (<= x -.999467725112455e-1)) (and (<= 3.00000000000000e0 y) (<= y 3.40000000000000e1)))
(- (+ x y) 3.00000000000000e0))
(FPCore (x y)
:name "gsl_sf_hyperg_2F1_4"
:pre (and (and (<= 1.99005583991942e0 x) (<= x 1.99189843450392e0)) (and (<= 3.99787869538542e0 y) (<= y 4.00381023165580e0)))
(- (+ x y) 6.00000000000000e0))
(FPCore (x y z a)
:name "gsl_sf_hyperg_2F1_5"
:pre (and (and (<= 9.00000000000000e0 x) (<= x 1.15600000000000e3)) (and (<= 1.99005583991942e0 y) (<= y 1.99189843450392e0)) (and (<= 3.99787869538542e0 z) (<= z 4.00381023165580e0)) (and (<= 3.00000000000000e0 a) (<= a 3.40000000000000e1)))
(- (* x 3.00000000000000e0) (* (+ (+ y z) 6.00000000000000e0) a)))
(FPCore (x y)
:name "gsl_sf_hyperg_2F1_6"
:pre (and (and (<= -.100105382022156e0 x) (<= x -.999467725112455e-1)) (and (<= 3.00000000000000e0 y) (<= y 3.40000000000000e1)))
(- (+ x y) 3.00000000000000e0))
(FPCore (x y)
:name "gsl_sf_hyperg_2F1_7"
:pre (and (and (<= -.100105382022156e0 x) (<= x -.999467725112455e-1)) (and (<= 3.00000000000000e0 y) (<= y 3.40000000000000e1)))
(- (+ x y) 2.00000000000000e0))
(FPCore (x y)
:name "gsl_sf_hyperg_2F1_8"
:pre (and (and (<= 1.99005583991942e0 x) (<= x 1.99189843450392e0)) (and (<= 3.99787869538542e0 y) (<= y 4.00381023165580e0)))
(- (+ x y) 6.00000000000000e0))

(FPCore (x y)
:name "gsl_sf_hyperg_2F1_conj_0"
:pre (and (and (<= -.100105382313338e0 x) (<= x -.999467726613754e-1)) (and (<= 3.00000000000000e0 y) (<= y 5.10000000000000e1)))
(- (+ x y) 3.00000000000000e0))
(FPCore (x y z a b c i j)
:name "gsl_sf_hyperg_2F1_conj_1"
:pre (and (and (<= 9.99320126855500e-1 x) (<= x 9.99935560696785e-1)) (and (<= 7.74925334681102e0 y) (<= y 7.54419320115887e3)) (and (<= 5.99367706119973e0 z) (<= z 9.70200000045719e3)) (and (<= -.967898236303018e7 a) (<= a 7.88849667636531e9)) (and (<= -.275765202540333e8 b) (<= b 5.56810748318210e3)) (and (<= -.130290131529971e5 c) (<= c -.307878656034296e1)) (and (<= -.631627554108593e-3 i) (<= i 4.65696000044347e5)) (and (<= -.967898236303018e7 j) (<= j 7.88849667636531e9)))
(+ (* (+ (* (/ y z) x) 1.00000000000000e0) a) (* (* (+ (* b x) (/ c i)) x) j)))
(FPCore (x y)
:name "gsl_sf_hyperg_2F1_conj_2"
:pre (and (and (<= -.100105382313338e0 x) (<= x -.999467726613754e-1)) (and (<= 3.00000000000000e0 y) (<= y 5.10000000000000e1)))
(- (+ x y) 3.00000000000000e0))

(FPCore (x y z)
:name "gsl_sf_hyperg_2F1_renorm_0"
:pre (and (and (<= -.508859358327505e1 x) (<= x 9.21158734308903e2)) (and (<= -.125913921672240e3 y) (<= y 7.71323428777653e2)) (and (<= 7.35221373114493e-1 z) (<= z 2.67363918711403e1)))
(- (+ (log (+ x (/ y z))) 9.18938533204673e-1) 7.00000000000000e0))
(FPCore (x y z a b c i j k l m)
:name "gsl_sf_hyperg_2F1_renorm_1"
:pre (and (and (<= 2.91885430016346e-1 x) (<= x 2.92359660206201e-1)) (and (<= -.102647786268854e1 y) (<= y 5.77353239149367e1)) (and (<= -.456087970094815e6 z) (<= z 7.69022114658206e8)) (and (<= -.582054362408808e2 a) (<= a 2.84121531341918e10)) (and (<= -.799969922479269e0 b) (<= b 4.90003007752073e1)) (and (<= -.756431410989770e6 c) (<= c 1.12074609222578e7)) (and (<= -.281429947118459e4 i) (<= i 2.31617427935604e4)) (and (<= -.369600702564575e5 j) (<= j 3.36762481816741e5)) (and (<= -.756431410989770e6 k) (<= k 1.12074609222578e7)) (and (<= -.756431410989770e6 l) (<= l 1.12074609222578e7)) (and (<= -.925004395228222e0 m) (<= m 3.30509095596746e4)))
(+ (* (* (/ (* y z) (* a b)) (* (* x x) x)) c) (+ (* (* (+ i j) x) k) (* l (+ (* m x) 1.00000000000000e0)))))
(FPCore (x y z a b c i j k l m)
:name "gsl_sf_hyperg_2F1_renorm_2"
:pre (and (and (<= 2.91885430016346e-1 x) (<= x 2.92359660206201e-1)) (and (<= -.823341892753641e6 y) (<= y 1.22049196270361e7)) (and (<= -.281429947118459e4 z) (<= z 2.31617427935604e4)) (and (<= -.369600702564575e5 a) (<= a 3.36762481816741e5)) (and (<= -.823341892753641e6 b) (<= b 1.22049196270361e7)) (and (<= -.925004395228222e0 c) (<= c 3.30509095596746e4)) (and (<= -.823341892753641e6 i) (<= i 1.22049196270361e7)) (and (<= -.102647786268854e1 j) (<= j 5.77353239149367e1)) (and (<= -.456087970094815e6 k) (<= k 7.69022114658206e8)) (and (<= -.582054362408808e2 l) (<= l 2.84121531341918e10)) (and (<= -.799969922479269e0 m) (<= m 4.90003007752073e1)))
(+ (+ (* y (* (+ z a) x)) (* b (+ (* c x) 1.00000000000000e0))) (* i (* (/ (* j k) (* l m)) (* (* x x) x)))))
(FPCore (x y z a)
:name "gsl_sf_hyperg_2F1_renorm_3"
:pre (and (and (<= 9.00000000000000e0 x) (<= x 3.60000000000000e3)) (and (<= 8.72813018685831e0 y) (<= y 1.97363918711403e1)) (and (<= 2.64509356342485e-1 z) (<= z 1.12647786268854e1)) (and (<= 3.00000000000000e0 a) (<= a 6.00000000000000e1)))
(- (* x 3.00000000000000e0) (* (+ (+ y z) 6.00000000000000e0) a)))
(FPCore (x y z a b c i j k)
:name "gsl_sf_hyperg_2F1_renorm_4"
:pre (and (and (<= -.231892427056714e-1 x) (<= x 1.85271737768215e1)) (and (<= -.999969922479269e0 y) (<= y 1.19999999999998e1)) (and (<= 2.91885430016346e-1 z) (<= z 2.92359660206201e-1)) (and (<= -.395600771426644e-1 a) (<= a 3.23961116681182e0)) (and (<= -.616778671934028e-1 b) (<= b 1.05969689924952e1)) (and (<= -.899969922479269e0 c) (<= c 1.29999999999998e1)) (and (<= -.601070676496881e-2 i) (<= i 1.03190373045799e0)) (and (<= -.135313049395264e0 j) (<= j 1.10895548583812e1)) (and (<= 2.30867209779931e0 k) (<= k 2.22326085321855e2)))
(+ (* (* (* (* b x) (/ y c)) z) z) (- (+ (* (+ i 1.00000000000000e0) (* j z)) 1.00000000000000e0) (* (* (/ k y) (+ a 1.00000000000000e0)) z))))
(FPCore (x y)
:name "gsl_sf_hyperg_2F1_renorm_5"
:pre (and (and (<= 9.04657253329612e-8 x) (<= x 7.67370459200012e-5)) (and (<= 8.11727787705839e-1 y) (<= y 8.11742408026852e-1)))
(log (+ (* (- (* y x) 1.64493406684823e0) x) 1.00000000000000e0)))

(FPCore (x y z a b c i j k l m)
:name "gsl_sf_hyperg_2F1_conj_renorm_0"
:pre (and (and (<= 9.94908995265438e-1 x) (<= x 9.95857455645147e-1)) (and (<= 9.97409463692905e1 y) (<= y 6.06919358530224e3)) (and (<= 1.10059720595743e4 z) (<= z 4.06837609242607e7)) (and (<= -.410420270841134e2 a) (<= a 1.47615290484890e11)) (and (<= -.600843062138561e0 b) (<= b 7.09970576497831e1)) (and (<= -.139141068648556e11 c) (<= c 4.39837554609910e14)) (and (<= -.367888752479053e3 i) (<= i 1.82843977105137e3)) (and (<= -.139141068648556e11 j) (<= j 8.98649621967825e14)) (and (<= -.145211126822052e4 k) (<= k 2.08008652943408e4)) (and (<= -.102551371608419e5 l) (<= l 1.06410832714451e5)) (and (<= -.139141068648556e11 m) (<= m 6.28520837783646e14)))
(+ (* (* (/ (* y z) (* a b)) (* (* x x) x)) c) (+ (* (+ (* i x) 1.00000000000000e0) j) (* (* (+ k l) x) m))))
(FPCore (x y z a b c i j)
:name "gsl_sf_hyperg_2F1_conj_renorm_1"
:pre (and (and (<= 9.94908995265438e-1 x) (<= x 9.95857455645147e-1)) (and (<= -.308296120536129e19 y) (<= y 8.87906506380148e19)) (and (<= -.145815172642334e4 z) (<= z 2.08873922431653e4)) (and (<= -.561874840066749e5 a) (<= a 1.90117328128705e3)) (and (<= -.284224564294414e-1 b) (<= b 1.56044973310493e6)) (and (<= -.439649070603029e19 c) (<= c 1.26705167702859e20)) (and (<= -.164213401702111e2 i) (<= i 1.87368064146978e4)) (and (<= -.561180286993985e1 j) (<= j 2.22930761020319e4)))
(+ (* y (* (+ (* z x) (/ a b)) x)) (* c (+ (* (/ i j) x) 1.00000000000000e0))))
(FPCore (x y)
:name "gsl_sf_hyperg_2F1_conj_renorm_2"
:pre (and (and (<= 8.39630442472682e-7 x) (<= x 7.10753769474488e-5)) (and (<= 8.11728867657641e-1 y) (<= y 8.11742265122334e-1)))
(log (+ (* (- (* y x) 1.64493406684823e0) x) 1.00000000000000e0)))

