(FPCore (x y z a b c i j k l m n)
:name "gsl_sf_bessel_Jnu_0"
:pre (and (and (<= 4.77262989268547e14 x) (<= x 4.85099980938741e14)) (and (<= 6.83667160939776e1 y) (<= y 6.85060468452830e1)) (and (<= -.981120810120535e-2 z) (<= z 9.61172794005536e-2)) (and (<= 1.41354835058037e-11 a) (<= a 1.42334644622162e-11)) (and (<= 1.46588357080858e-2 b) (<= b 1.46962339117088e-2)) (and (<= -.229742229687908e-4 c) (<= c -.227488920181658e-4)) (and (<= 8.27511982524070e-1 i) (<= i 8.32056469323203e-1)) (and (<= -.953502119760930e0 j) (<= j -.934071603235936e0)) (and (<= 9.99999192553514e-1 k) (<= k 9.99999195530958e-1)) (and (<= -.231128937132295e-15 l) (<= l -.228553775671127e-15)) (and (<= 2.24011973085950e-4 m) (<= m 2.25843977049202e-4)) (and (<= 1.21795797135864e-1 n) (<= n 1.22465465955799e-1)))
(+ (/ (* (+ (+ a b) (/ c x)) (* (sqrt i) (cos j))) (* (* y (pow y 3.33333333333333e-1)) (pow y 3.33333333333333e-1))) (/ (* (+ (+ k l) (/ m x)) (* (sqrt n) z)) (pow y 3.33333333333333e-1))))
(FPCore (x y z a)
:name "gsl_sf_bessel_Jnu_1"
:pre (and (and (<= 1.54184198059408e0 x) (<= x 1.55427079019669e0)) (and (<= -.127863147393039e-3 y) (<= y 1.15206746731909e-3)) (and (<= -.127863147393039e-3 z) (<= z 1.15206746731909e-3)) (and (<= -.361873894103532e-3 a) (<= a 3.66184843292953e-3)))
(+ (- (* y (+ (/ x 2.00000000000000e0) (/ x 2.00000000000000e0))) z) a))

(FPCore (x y z a b c i j k l m n)
:name "gsl_sf_bessel_Ynu_0"
:pre (and (and (<= 1.78791846262279e14 x) (<= x 1.80446331434456e14)) (and (<= 6.04704866402334e1 y) (<= y 6.05401520158861e1)) (and (<= 1.66106804323175e-11 z) (<= z 1.66989201685249e-11)) (and (<= 1.31550516218664e-2 a) (<= a 1.31815102991047e-2)) (and (<= -.148812988809036e-4 b) (<= b -.147589224114037e-4)) (and (<= 9.81910391743074e-1 c) (<= c 9.84667677302713e-1)) (and (<= -.173685443239688e1 i) (<= i -.172031424593097e1)) (and (<= 9.99999069537522e-1 j) (<= j 9.99999071883118e-1)) (and (<= -.363478214189197e-15 k) (<= k -.360753574512912e-15)) (and (<= 1.54218002215951e-4 l) (<= l 1.55359074860366e-4)) (and (<= 1.02906194230906e-1 m) (<= m 1.03195287961515e-1)) (and (<= -.840302143076802e-2 n) (<= n 8.12540034369407e-2)))
(+ (/ (* (+ (+ z a) (/ b x)) (* (sqrt c) (sin i))) (* (* y (pow y 3.33333333333333e-1)) (pow y 3.33333333333333e-1))) (/ (* (+ (+ j k) (/ l x)) (* (sqrt m) (* n -.100000000000000e0))) (pow y 3.33333333333333e-1))))

(FPCore (x y)
:name "gsl_sf_bessel_lnKnu_0"
:pre (and (and (<= 3.88512982517550e1 x) (<= x 3.94347208334594e1)) (and (<= 3.66495553586482e0 y) (<= y 3.66920018030467e0)))
(- (log x) y))

(FPCore (x y)
:name "gsl_sf_lnpoch_0"
:pre (and (and (<= 1.67039286963987e0 x) (<= x 1.70636769687086e0)) (and (<= 1.02132560970659e1 y) (<= y 1.02150690637706e1)))
(log (/ (/ 1.00000000000000e0 (* (exp x) 5.04000000000000e3)) (exp (- y)))))

(FPCore (x)
:name "gsl_sf_pochrel_0"
:pre (and (<= 9.99811281933791e-1 x) (<= x 1.00019163479423e0))
(- (exp (- (log x))) 1.00000000000000e0))

(FPCore (x y z a b c i j k l m n)
:name "gsl_sf_lnbeta_0"
:pre (and (and (<= 1.51725811072545e-3 x) (<= x 4.75546220983558e-3)) (and (<= 5.49788569912203e0 y) (<= y 5.64597424269872e0)) (and (<= -.428383995699447e-2 z) (<= z 4.65327006698171e-2)) (and (<= 2.74333644229135e0 a) (<= a 2.77621423270443e0)) (and (<= 5.49788569912203e0 b) (<= b 5.64597424269872e0)) (and (<= -.428383995699447e-2 c) (<= c 4.65327006698171e-2)) (and (<= 2.74333644229135e0 i) (<= i 2.77621423270443e0)) (and (<= -.646921409188027e-7 j) (<= j -.206926318499665e-7)) (and (<= 5.29953629689336e-12 k) (<= k 5.11412029438993e-10)) (and (<= 4.22105527178563e0 l) (<= l 4.23794751012818e0)) (and (<= 1.08591828571206e1 m) (<= m 1.08624210612197e1)) (and (<= 2.62036916301394e0 n) (<= n 2.62360736711305e0)))
(- (+ (+ (- (+ y 9.18938533204673e-1) 7.00000000000000e0) (* (+ z 5.00000000000000e-1) (log a))) (+ (- (+ b 9.18938533204673e-1) 7.00000000000000e0) (* (+ c 5.00000000000000e-1) (log i)))) (* x (+ (* (+ j 1.13940635703674e-4) (* k x)) (/ (* l 2.85337998765782e0) (* m n))))))

(FPCore (x y)
:name "gsl_sf_gegenpoly_2_0"
:pre (and (and (<= -.912910468483966e-4 x) (<= x -.911874178337517e-4)) (and (<= 6.00078859598299e5 y) (<= y 6.01220257112993e5)))
(- (* x (* (+ y y) x)) 1.00000000000000e0))

(FPCore (x y z)
:name "gsl_sf_gegenpoly_3_0"
:pre (and (and (<= -.795160653366418e4 x) (<= x -.793769768276367e4)) (and (<= -.200219809123137e0 y) (<= y -.199893252698067e0)) (and (<= -.400213266704136e0 z) (<= z -.399559415432713e0)))
(+ (- -.100000000000000e0 y) (/ (* (* (+ z 4.00000000000000e0) x) x) 3.00000000000000e0)))

(FPCore (x y)
:name "gsl_sf_hyperg_0F1_0"
:pre (and (and (<= 8.08258465081413e-21 x) (<= x 2.23386798513504e-4)) (and (<= 8.11699815148847e-1 y) (<= y 8.11742425283354e-1)))
(log (+ (* (- (* y x) 1.64493406684823e0) x) 1.00000000000000e0)))
(FPCore (x y z)
:name "gsl_sf_hyperg_0F1_1"
:pre (and (and (<= -.122041853983646e1 x) (<= x -.121872068206052e1)) (and (<= -.160175847334617e1 y) (<= y -.159914602176801e1)) (and (<= -.266799356316480e1 z) (<= z -.753957248134515e0)))
(+ (* (* (log (- x)) 5.00000000000000e-1) (- 1.00000000000000e0 y)) z))
(FPCore (x y z a b c i j k l m)
:name "gsl_sf_hyperg_0F1_2"
:pre (and (and (<= 5.33802465936269e1 x) (<= x 5.34623191804850e1)) (and (<= 9.75854629440275e-1 y) (<= y 1.05163096339061e0)) (and (<= 5.01059424364967e-1 z) (<= z 5.02071475554525e-1)) (and (<= 4.77657967057999e-6 a) (<= a 4.83343915068349e-6)) (and (<= 9.89374529540854e-1 b) (<= b 1.02224026599647e0)) (and (<= -.678332122612908e-1 c) (<= c 2.17952987583526e-1)) (and (<= -.321307189086049e-1 i) (<= i -.253760694777794e-2)) (and (<= 1.98292043536014e0 j) (<= j 3.40351694669234e1)) (and (<= 6.98203604132926e0 k) (<= k 6.98689785194105e0)) (and (<= -.880324771792475e3 l) (<= l 2.90150802196359e-1)) (and (<= -.202826839361788e3 m) (<= m 2.90150802196359e-1)))
(- (* (cos x) (* (/ (* a b) y) (+ z (* c i)))) (* (sin x) (- (* (/ j k) l) m))))
(FPCore (x y z a b c i j k l m n)
:name "gsl_sf_hyperg_0F1_3"
:pre (and (and (<= 4.00000000000000e0 x) (<= x 4.00000000000000e1)) (and (<= 2.24969077714908e0 y) (<= y 3.80249835437303e2)) (and (<= 1.41219393425110e1 z) (<= z 1.98313669308736e1)) (and (<= 6.98203604132926e0 a) (<= a 6.98689785194105e0)) (and (<= 1.99429170793560e2 b) (<= b 3.93283114346948e2)) (and (<= 1.58196025879160e1 c) (<= c 9.65750063621193e2)) (and (<= 3.97738640163563e0 i) (<= i 3.10765194901423e1)) (and (<= 1.99744891855181e0 j) (<= j 2.97538021393217e1)) (and (<= 1.99980057069237e2 k) (<= k 1.26787729906652e3)) (and (<= 1.54272587032902e-2 l) (<= l 7.01728706255999e-2)) (and (<= 1.41215622211117e1 m) (<= m 1.98313669308736e1)) (and (<= -.309770943000073e-2 n) (<= n -.100367865100526e-2)))
(+ (* (- x (* j (/ y k))) (/ (+ (* l y) (+ a a)) (+ (* z z) (* i i)))) (* m (/ (+ (* n y) x) (- (+ b c))))))
(FPCore (x y z a b)
:name "gsl_sf_hyperg_0F1_4"
:pre (and (and (<= 1.39640720826585e1 x) (<= x 1.39737957038821e1)) (and (<= 3.57370012329169e-2 y) (<= y 3.58061741655581e-2)) (and (<= 1.43125035057180e-1 z) (<= z 1.43224697506663e-1)) (and (<= 1.00512119391503e0 a) (<= a 1.00512832849397e0)) (and (<= 2.49690777149081e-1 b) (<= b 2.50000000000000e-1)))
(+ (* (+ x (/ (* z b) a)) (/ -.200000000000000e0 (+ (* x x) 4.00000000000000e0))) (* (+ (* (/ y a) (* -.500000000000000e-1 z)) 2.00000000000000e0) (/ x (+ (* x x) 4.00000000000000e0)))))
(FPCore (x y)
:name "gsl_sf_hyperg_0F1_5"
:pre (and (and (<= 9.96210837624114e-1 x) (<= x 1.00784221233323e0)) (and (<= -.853978231993224e-3 y) (<= y 1.75847334616854e-2)))
(- (/ 1.00000000000000e0 (* (* x x) (+ (/ y 1.80000000000000e1) 1.00000000000000e0))) 1.00000000000000e0))
(FPCore (x)
:name "gsl_sf_hyperg_0F1_6"
:pre (and (<= 9.96210837624114e-1 x) (<= x 1.00784221233323e0))
(- (/ 1.00000000000000e0 (* x x)) 1.00000000000000e0))
(FPCore (x y z a b c i j k l m)
:name "gsl_sf_hyperg_0F1_7"
:pre (and (and (<= 5.33802465936269e1 x) (<= x 5.34623191804850e1)) (and (<= 9.75854629440275e-1 y) (<= y 1.05163096339061e0)) (and (<= 5.01059424364967e-1 z) (<= z 5.02071475554525e-1)) (and (<= 4.77657967057999e-6 a) (<= a 4.83343915068349e-6)) (and (<= 9.89374529540854e-1 b) (<= b 1.02224026599647e0)) (and (<= -.678332122612908e-1 c) (<= c 2.17952987583526e-1)) (and (<= -.321307189086049e-1 i) (<= i -.253760694777794e-2)) (and (<= 1.98292043536014e0 j) (<= j 3.40351694669234e1)) (and (<= 6.98203604132926e0 k) (<= k 6.98689785194105e0)) (and (<= -.880324771792475e3 l) (<= l 2.90150802196359e-1)) (and (<= -.202826839361788e3 m) (<= m 2.90150802196359e-1)))
(- (* (cos x) (* (/ (* a b) y) (+ z (* c i)))) (* (sin x) (- (* (/ j k) l) m))))
(FPCore (x y z a b c i j k l m n)
:name "gsl_sf_hyperg_0F1_8"
:pre (and (and (<= 4.00000000000000e0 x) (<= x 4.00000000000000e1)) (and (<= 2.24969077714908e0 y) (<= y 3.80249835437303e2)) (and (<= 1.41219393425110e1 z) (<= z 1.98313669308736e1)) (and (<= 6.98203604132926e0 a) (<= a 6.98689785194105e0)) (and (<= 1.99429170793560e2 b) (<= b 3.93283114346948e2)) (and (<= 1.58196025879160e1 c) (<= c 9.65750063621193e2)) (and (<= 3.97738640163563e0 i) (<= i 3.10765194901423e1)) (and (<= 1.99744891855181e0 j) (<= j 2.97538021393217e1)) (and (<= 1.99980057069237e2 k) (<= k 1.26787729906652e3)) (and (<= 1.54272587032902e-2 l) (<= l 7.01728706255999e-2)) (and (<= 1.41215622211117e1 m) (<= m 1.98313669308736e1)) (and (<= -.309770943000073e-2 n) (<= n -.100367865100526e-2)))
(+ (* (- x (* j (/ y k))) (/ (+ (* l y) (+ a a)) (+ (* z z) (* i i)))) (* m (/ (+ (* n y) x) (- (+ b c))))))
(FPCore (x y z a b)
:name "gsl_sf_hyperg_0F1_9"
:pre (and (and (<= 1.39640720826585e1 x) (<= x 1.39737957038821e1)) (and (<= 3.57370012329169e-2 y) (<= y 3.58061741655581e-2)) (and (<= 1.43125035057180e-1 z) (<= z 1.43224697506663e-1)) (and (<= 1.00512119391503e0 a) (<= a 1.00512832849397e0)) (and (<= 2.49690777149081e-1 b) (<= b 2.50000000000000e-1)))
(+ (* (+ x (/ (* z b) a)) (/ -.200000000000000e0 (+ (* x x) 4.00000000000000e0))) (* (+ (* (/ y a) (* -.500000000000000e-1 z)) 2.00000000000000e0) (/ x (+ (* x x) 4.00000000000000e0)))))
(FPCore (x y)
:name "gsl_sf_hyperg_0F1_10"
:pre (and (and (<= 9.96210837624114e-1 x) (<= x 1.00784221233323e0)) (and (<= -.853978231993224e-3 y) (<= y 1.75847334616854e-2)))
(- (/ 1.00000000000000e0 (* (* x x) (+ (/ y 1.80000000000000e1) 1.00000000000000e0))) 1.00000000000000e0))
(FPCore (x)
:name "gsl_sf_hyperg_0F1_11"
:pre (and (<= 9.96210837624114e-1 x) (<= x 1.00784221233323e0))
(- (/ 1.00000000000000e0 (* x x)) 1.00000000000000e0))
(FPCore (x y z a b c i j k l m)
:name "gsl_sf_hyperg_0F1_12"
:pre (and (and (<= 5.33802465936269e1 x) (<= x 5.34623191804850e1)) (and (<= 9.75854629440275e-1 y) (<= y 1.05163096339061e0)) (and (<= 5.01059424364967e-1 z) (<= z 5.02071475554525e-1)) (and (<= 4.77657967057999e-6 a) (<= a 4.83343915068349e-6)) (and (<= 9.89374529540854e-1 b) (<= b 1.02224026599647e0)) (and (<= -.678332122612908e-1 c) (<= c 2.17952987583526e-1)) (and (<= -.321307189086049e-1 i) (<= i -.253760694777794e-2)) (and (<= 1.98292043536014e0 j) (<= j 3.40351694669234e1)) (and (<= 6.98203604132926e0 k) (<= k 6.98689785194105e0)) (and (<= -.880324771792475e3 l) (<= l 2.90150802196359e-1)) (and (<= -.202826839361788e3 m) (<= m 2.90150802196359e-1)))
(- (* (cos x) (* (/ (* a b) y) (+ z (* c i)))) (* (sin x) (- (* (/ j k) l) m))))
(FPCore (x y z a b c i j k l m n)
:name "gsl_sf_hyperg_0F1_13"
:pre (and (and (<= 4.00000000000000e0 x) (<= x 4.00000000000000e1)) (and (<= 2.24969077714908e0 y) (<= y 3.80249835437303e2)) (and (<= 1.41219393425110e1 z) (<= z 1.98313669308736e1)) (and (<= 6.98203604132926e0 a) (<= a 6.98689785194105e0)) (and (<= 1.99429170793560e2 b) (<= b 3.93283114346948e2)) (and (<= 1.58196025879160e1 c) (<= c 9.65750063621193e2)) (and (<= 3.97738640163563e0 i) (<= i 3.10765194901423e1)) (and (<= 1.99744891855181e0 j) (<= j 2.97538021393217e1)) (and (<= 1.99980057069237e2 k) (<= k 1.26787729906652e3)) (and (<= 1.54272587032902e-2 l) (<= l 7.01728706255999e-2)) (and (<= 1.41215622211117e1 m) (<= m 1.98313669308736e1)) (and (<= -.309770943000073e-2 n) (<= n -.100367865100526e-2)))
(+ (* (- x (* j (/ y k))) (/ (+ (* l y) (+ a a)) (+ (* z z) (* i i)))) (* m (/ (+ (* n y) x) (- (+ b c))))))
(FPCore (x y z a b)
:name "gsl_sf_hyperg_0F1_14"
:pre (and (and (<= 1.39640720826585e1 x) (<= x 1.39737957038821e1)) (and (<= 3.57370012329169e-2 y) (<= y 3.58061741655581e-2)) (and (<= 1.43125035057180e-1 z) (<= z 1.43224697506663e-1)) (and (<= 1.00512119391503e0 a) (<= a 1.00512832849397e0)) (and (<= 2.49690777149081e-1 b) (<= b 2.50000000000000e-1)))
(+ (* (+ x (/ (* z b) a)) (/ -.200000000000000e0 (+ (* x x) 4.00000000000000e0))) (* (+ (* (/ y a) (* -.500000000000000e-1 z)) 2.00000000000000e0) (/ x (+ (* x x) 4.00000000000000e0)))))
(FPCore (x y)
:name "gsl_sf_hyperg_0F1_15"
:pre (and (and (<= 9.96210837624114e-1 x) (<= x 1.00784221233323e0)) (and (<= -.853978231993224e-3 y) (<= y 1.75847334616854e-2)))
(- (/ 1.00000000000000e0 (* (* x x) (+ (/ y 1.80000000000000e1) 1.00000000000000e0))) 1.00000000000000e0))
(FPCore (x)
:name "gsl_sf_hyperg_0F1_16"
:pre (and (<= 9.96210837624114e-1 x) (<= x 1.00784221233323e0))
(- (/ 1.00000000000000e0 (* x x)) 1.00000000000000e0))

(FPCore (x y)
:name "gsl_sf_laguerre_1_0"
:pre (and (and (<= 1.54884133793221e1 x) (<= x 1.55058297232352e1)) (and (<= 1.64796129020156e1 y) (<= y 1.65135700575344e1)))
(- (+ x 1.00000000000000e0) y))

(FPCore (x y z)
:name "gsl_sf_laguerre_2_0"
:pre (and (and (<= 2.44167211707207e1 x) (<= x 2.44518599473257e1)) (and (<= 2.98851824805596e1 y) (<= y 2.99198723332150e1)) (and (<= 2.78851824805596e1 z) (<= z 2.79198723332150e1)))
(+ (* (+ (* x (/ -.500000000000000e-1 y)) 1.00000000000000e0) (* (- (+ 2.00000000000000e0 z)) x)) (* (+ z 1.00000000000000e0) (* 5.00000000000000e-1 (+ 2.00000000000000e0 z)))))

(FPCore (x y z a b)
:name "gsl_sf_laguerre_3_0"
:pre (and (and (<= 9.16118626732895e4 x) (<= x 9.17557911022635e4)) (and (<= 9.10861350922993e4 y) (<= y 9.12282247287758e4)) (and (<= -.335772907161353e-1 z) (<= z -.334724077732689e-1)) (and (<= -.109783782375905e-5 a) (<= a -.109612795865949e-5)) (and (<= -.126550825830612e14 b) (<= b -.125960443549903e14)))
(+ (* (+ (* (+ z 1.00000000000000e0) (* a x)) 1.00000000000000e0) (* (/ (* b 3.00000000000000e0) (+ y 1.00000000000000e0)) x)) (/ (* (* (+ y 3.00000000000000e0) (+ 2.00000000000000e0 y)) (+ y 1.00000000000000e0)) 6.00000000000000e0)))

(FPCore (x)
:name "gsl_sf_conicalP_half_0"
:pre (and (<= 1.05064555157213e2 x) (<= x 1.05422010535280e2))
(floor (/ x 7.85398163397448e-1)))
(FPCore (x)
:name "gsl_sf_conicalP_half_1"
:pre (and (<= 1.05064555157213e2 x) (<= x 1.05422010535280e2))
(floor (/ x 7.85398163397448e-1)))

(FPCore (x)
:name "gsl_sf_conicalP_mhalf_0"
:pre (and (<= 8.47155412799203e1 x) (<= x 8.49304276464352e1))
(floor (/ x 7.85398163397448e-1)))
(FPCore (x)
:name "gsl_sf_conicalP_mhalf_1"
:pre (and (<= 8.47155412799203e1 x) (<= x 8.49304276464352e1))
(floor (/ x 7.85398163397448e-1)))

(FPCore (x y z a b c)
:name "gsl_sf_conicalP_1_0"
:pre (and (and (<= 1.00000000000000e0 x) (<= x 5.42137312114580e6)) (and (<= 0.00000000000000e-1 y) (<= y 5.42137312931336e6)) (and (<= -.152984079604929e6 z) (<= z 1.54819396466831e6)) (and (<= 3.97922126980470e2 a) (<= a 4.81930339739317e3)) (and (<= 2.00000000000000e0 b) (<= b 4.42200000000000e3)) (and (<= -.492856073994494e-1 c) (<= c -.490659900456682e-1)))
(- x (- y (* z (* (/ a b) (* c 5.00000000000000e-1))))))

(FPCore (x y z a b c)
:name "gsl_sf_conicalP_0_0"
:pre (and (and (<= 1.00000000000000e0 x) (<= x 1.69348820958828e7)) (and (<= 0.00000000000000e-1 y) (<= y 1.69348820896835e7)) (and (<= -.485016124952674e6 z) (<= z 5.10282615676087e6)) (and (<= 3.63601787618200e2 a) (<= a 6.06426514535965e3)) (and (<= 1.00000000000000e0 b) (<= b 5.77600000000000e3)) (and (<= -.484323217625323e-1 c) (<= c -.482127044087511e-1)))
(- x (- y (* z (* (/ a b) (* c 5.00000000000000e-1))))))

(FPCore (x y z a b c)
:name "gsl_sf_legendre_H3d_1_0"
:pre (and (and (<= 7.86503072345471e-1 x) (<= x 7.87601159114377e-1)) (and (<= 7.78663542141806e-11 y) (<= y 3.66740522539306e-3)) (and (<= 3.60426458126090e1 z) (<= z 3.61476107702638e1)) (and (<= -.166666666665369e-1 a) (<= a -.166605516535407e-1)) (and (<= 1.55732708430382e-10 b) (<= b 7.33929812753189e-3)) (and (<= -.856679672219656e-2 c) (<= c 1.92969904328351e-2)))
(- (* (/ (* (- 1.00000000000000e0 y) (- 1.00000000000000e0)) z) (/ x (tanh x))) (* (+ 1.00000000000000e0 (* a b)) (- (- c 1.73645156564817e-6) (* 4.60000000000000e1 2.69515142907906e-15)))))

