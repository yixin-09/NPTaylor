(FPCore (x)
:name "gsl_sf_ellint_P_0"
:pre (and (<= 9.99547603657384e-1 x) (<= x 9.99946709213910e-1))
(- 1.00000000000000e0 (* x x)))
(FPCore (x y)
:name "gsl_sf_ellint_P_1"
:pre (and (and (<= 3.58369093620416e-4 x) (<= x 6.07101359187449e3)) (and (<= 7.16738186925301e-4 y) (<= y 6.49421610520504e3)))
(- (/ (+ x (/ (+ y x) 3.00000000000000e0)) (/ (+ y x) 3.00000000000000e0)) 2.00000000000000e0))
(FPCore (x y z)
:name "gsl_sf_ellint_P_2"
:pre (and (and (<= 2.81713690764331e-2 x) (<= x 1.82201533422389e1)) (and (<= 1.06578732272045e-4 y) (<= y 8.78776244739138e-2)) (and (<= 2.81549790201922e-2 z) (<= z 1.00000000000000e0)))
(- (* (+ (+ (+ y z) x) x) 2.00000000000000e-1) x))
(FPCore (x y z)
:name "gsl_sf_ellint_P_3"
:pre (and (and (<= 2.81549790201922e-2 x) (<= x 1.00000000000000e0)) (and (<= 2.81713690764331e-2 y) (<= y 1.82201533422389e1)) (and (<= 1.06578732272045e-4 z) (<= z 8.78776244739138e-2)))
(- (* (+ (+ (+ z x) y) y) 2.00000000000000e-1) x))
(FPCore (x y z a)
:name "gsl_sf_ellint_P_4"
:pre (and (and (<= 2.81713690764331e-2 x) (<= x 1.82201533422389e1)) (and (<= 1.06578732272045e-4 y) (<= y 8.78776244739138e-2)) (and (<= 2.81549790201922e-2 z) (<= z 1.00000000000000e0)) (and (<= 1.06578732272045e-4 a) (<= a 4.39388139622988e-2)))
(- (* (+ (+ (+ y z) x) x) 2.00000000000000e-1) a))
(FPCore (x y z a)
:name "gsl_sf_ellint_P_5"
:pre (and (and (<= 2.81713690764331e-2 x) (<= x 1.82201533422389e1)) (and (<= 1.06578732272045e-4 y) (<= y 8.78776244739138e-2)) (and (<= 2.81549790201922e-2 z) (<= z 1.00000000000000e0)) (and (<= 0.00000000000000e-1 a) (<= a 4.39388105116150e-2)))
(- (* (+ (+ (+ y z) x) x) 2.00000000000000e-1) a))
(FPCore (x y)
:name "gsl_sf_ellint_P_6"
:pre (and (and (<= 2.81645158042094e-2 x) (<= x 1.00000000000000e0)) (and (<= 1.06578732272045e-4 y) (<= y 8.78395065065289e-2)))
(- 2.00000000000000e0 (/ (+ x (/ (+ y x) 3.00000000000000e0)) (/ (+ y x) 3.00000000000000e0))))
(FPCore (x y)
:name "gsl_sf_ellint_P_7"
:pre (and (and (<= 2.81543438202552e-2 x) (<= x 3.33643681042469e-1)) (and (<= 1.06578732272045e-4 y) (<= y 4.39197808587348e-2)))
(- 2.00000000000000e0 (/ (+ y x) x)))
(FPCore (x y)
:name "gsl_sf_ellint_P_8"
:pre (and (and (<= 2.81543438202552e-2 x) (<= x 3.33643681042469e-1)) (and (<= 0.00000000000000e-1 y) (<= y 4.39197256477941e-2)))
(- 2.00000000000000e0 (/ (+ y x) x)))
(FPCore (x)
:name "gsl_sf_ellint_P_9"
:pre (and (<= 9.99547603657384e-1 x) (<= x 1.00015309933750e0))
(- 1.00000000000000e0 (* (* x x) (* (sin (- 4.70875117938144e0 3.14159265358979e0)) (sin (- 4.70875117938144e0 3.14159265358979e0))))))
(FPCore ()
:name "gsl_sf_ellint_P_10"
(- 1.00000000000000e0 (* (sin (- 4.70875117938144e0 3.14159265358979e0)) (sin (- 4.70875117938144e0 3.14159265358979e0)))))

(FPCore (x y z a b c)
:name "gsl_sf_beta_inc_0"
:pre (and (and (<= -.324448478020440e1 x) (<= x 1.51422790049968e1)) (and (<= 1.35635767782714e0 y) (<= y 1.46890772162619e0)) (and (<= 9.42442820198423e-1 z) (<= z 1.00013863334297e0)) (and (<= 9.50866157043970e-1 a) (<= a 9.83353626115857e-1)) (and (<= 1.01692816647242e0 b) (<= b 1.04855417946817e0)) (and (<= 1.12047894740956e-14 c) (<= c 1.12134587223671e-14)))
(- 1.00000000000000e0 (/ (* (exp x) (* (* y z) (* a b))) c)))

(FPCore (x y z a b c i j k l m)
:name "gsl_sf_hyperg_1F1_0"
:pre (and (and (<= 9.93968854317464e1 x) (<= x 9.95326203491853e1)) (and (<= -.275669276016296e25 y) (<= y 7.57863135088342e27)) (and (<= 8.06986792799989e-4 z) (<= z 6.23630618996769e0)) (and (<= -.381206704699788e-1 a) (<= a -.286466454294255e-3)) (and (<= -.295341829786220e25 b) (<= b 8.14232501431712e27)) (and (<= 2.84810737868574e-3 c) (<= c 1.53484292138595e-1)) (and (<= -.256928259202145e25 i) (<= i 7.04335134708802e27)) (and (<= 7.12759691022384e-1 j) (<= j 8.77709646146611e1)) (and (<= -.752813589940604e3 k) (<= k -.183212072677874e-1)) (and (<= 1.27098880865352e-6 l) (<= l 3.17124570129546e11)) (and (<= 2.00000001765262e0 m) (<= m 8.80000000176671e1)))
(+ (+ (* y (* (+ z a) x)) (* b (+ (* c x) 1.00000000000000e0))) (* i (* (/ (* j k) (* l m)) (* (* x x) x)))))
(FPCore (x y z a b)
:name "gsl_sf_hyperg_1F1_1"
:pre (and (and (<= 9.93968854317464e1 x) (<= x 9.95326203491853e1)) (and (<= 5.79094228815535e-1 y) (<= y 1.14362013428726e0)) (and (<= 1.49122358952793e6 z) (<= z 1.21534382595502e7)) (and (<= -.287240308977616e-1 a) (<= a 8.41811521919539e-1)) (and (<= 1.76526219914049e-8 b) (<= b 1.76799418520746e-8)))
(- (+ (* (+ (* z x) 1.00000000000000e0) (* y x)) 1.00000000000000e0) (* (* (/ (- a) b) (+ (* y x) 1.00000000000000e0)) x)))
(FPCore (x)
:name "gsl_sf_hyperg_1F1_2"
:pre (and (<= 8.37127596910224e1 x) (<= x 8.38418115219195e1))
(- x (floor x)))
(FPCore (x y z a b c i j k)
:name "gsl_sf_hyperg_1F1_3"
:pre (and (and (<= 2.15818847808046e0 x) (<= x 8.82662716693880e1)) (and (<= 3.00000000000000e0 y) (<= y 1.75000000000000e2)) (and (<= 3.00000000000000e0 z) (<= z 8.90000000000000e1)) (and (<= 1.00000001765262e0 a) (<= a 8.70000000176671e1)) (and (<= 3.00000001765262e0 b) (<= b 8.90000000176671e1)) (and (<= 9.93968854317464e1 c) (<= c 9.95326203491853e1)) (and (<= 1.76526219914049e-8 i) (<= i 1.76799418520746e-8)) (and (<= -.841811521919539e-1 j) (<= j 2.87240308977616e-1)) (and (<= 6.00000000000000e1 k) (<= k 1.23900000000000e5)))
(+ (* (/ (* (+ j z) (- x 1.00000000000000e0)) (* (* k a) (- b 1.00000000000000e0))) (- (- c))) (/ (* (- (- x 1.00000000000000e0)) (- (- z i) 1.00000000000000e0)) (* (* (+ y y) (- b 2.00000000000000e0)) (- (+ i z) 1.00000000000000e0)))))
(FPCore (x y)
:name "gsl_sf_hyperg_1F1_4"
:pre (and (and (<= 1.76526219914049e-8 x) (<= x 1.76799418520746e-8)) (and (<= 3.00000000000000e0 y) (<= y 8.90000000000000e1)))
(- (+ x y) 3.00000000000000e0))
(FPCore (x)
:name "gsl_sf_hyperg_1F1_5"
:pre (and (<= 8.37127596910224e1 x) (<= x 8.38418115219195e1))
(- x (floor x)))
(FPCore (x y z a b c i j k)
:name "gsl_sf_hyperg_1F1_6"
:pre (and (and (<= 2.15818847808046e0 x) (<= x 8.82662716693880e1)) (and (<= 3.00000000000000e0 y) (<= y 1.75000000000000e2)) (and (<= 3.00000000000000e0 z) (<= z 8.90000000000000e1)) (and (<= 1.00000001765262e0 a) (<= a 8.70000000176671e1)) (and (<= 3.00000001765262e0 b) (<= b 8.90000000176671e1)) (and (<= 9.93968854317464e1 c) (<= c 9.95326203491853e1)) (and (<= 1.76526219914049e-8 i) (<= i 1.76799418520746e-8)) (and (<= -.841811521919539e-1 j) (<= j 2.87240308977616e-1)) (and (<= 6.00000000000000e1 k) (<= k 1.23900000000000e5)))
(+ (* (/ (* (+ j z) (- x 1.00000000000000e0)) (* (* k a) (- b 1.00000000000000e0))) (- (- c))) (/ (* (- (- x 1.00000000000000e0)) (- (- z i) 1.00000000000000e0)) (* (* (+ y y) (- b 2.00000000000000e0)) (- (+ i z) 1.00000000000000e0)))))
(FPCore (x y)
:name "gsl_sf_hyperg_1F1_7"
:pre (and (and (<= 1.76526219914049e-8 x) (<= x 1.76799418520746e-8)) (and (<= 3.00000000000000e0 y) (<= y 8.90000000000000e1)))
(- (+ x y) 3.00000000000000e0))
(FPCore (x)
:name "gsl_sf_hyperg_1F1_8"
:pre (and (<= 8.37127596910224e1 x) (<= x 8.38418115219195e1))
(- x (floor x)))

(FPCore (x y z a)
:name "gsl_sf_hyperg_U_0"
:pre (and (and (<= -.738125815121293e-3 x) (<= x 3.61917073695661e-3)) (and (<= -.115941934164738e-2 y) (<= y 5.68494947756040e-3)) (and (<= -.231868282273954e-2 z) (<= z 1.13697152237407e-2)) (and (<= 3.14159265359214e1 a) (<= a 3.45575146623636e1)))
(+ (* x (- (/ (/ z x) (tan a)) (* (/ y x) (+ y y)))) 1.00000000000000e0))
(FPCore (x y z a b)
:name "gsl_sf_hyperg_U_1"
:pre (and (and (<= 8.88178419700125e-16 x) (<= x 1.00221558590084e0)) (and (<= -.660665463246475e0 y) (<= y 1.25564239728122e0)) (and (<= 7.99638082926304e0 z) (<= z 8.00738125815121e0)) (and (<= 1.76791225927557e0 a) (<= a 1.77003311736055e0)) (and (<= -.387641181819586e10 b) (<= b 7.87551667647653e1)))
(+ y (* (- (- z (+ x x)) a) b)))
(FPCore (x y z a b c i j k l m n x0 x1 x2)
:name "gsl_sf_hyperg_U_2"
:pre (and (and (<= 1.00000000000000e0 x) (<= x 1.30000000000000e1)) (and (<= -.999999999999999e-1 y) (<= y 1.29999403579848e1)) (and (<= 0.00000000000000e-1 z) (<= z 1.20000000000000e1)) (and (<= 1.76791225927557e0 a) (<= a 1.77003311736055e0)) (and (<= 7.99638082926304e0 b) (<= b 2.00073812581512e1)) (and (<= 9.92618741848787e-1 c) (<= c 1.30036191707370e1)) (and (<= -.100723738629373e0 i) (<= i 1.30035595287218e1)) (and (<= -.800612073155134e0 j) (<= j 1.77020897174850e0)) (and (<= -.999999999999999e-1 k) (<= k 9.99940357984822e-1)) (and (<= 7.99638082926304e0 l) (<= l 8.00738125815121e0)) (and (<= 9.00000000000000e0 m) (<= m 3.30000000000000e1)) (and (<= -.200000000000000e0 n) (<= n -.596420151779409e-5)) (and (<= -.361917073695661e-3 x0) (<= x0 7.38125815121293e-3)) (and (<= -.398598267761551e-3 x1) (<= x1 1.77905274603781e-2)) (and (<= 8.00000000000000e0 x2) (<= x2 2.00000000000000e1)))
(- (* j (/ (* (+ k z) a) (* (+ z l) x))) (* (/ (+ (* c x) (* m n)) (* (* b x) (- y x0))) (* x1 (/ (* a i) (* x2 c))))))
(FPCore (x y)
:name "gsl_sf_hyperg_U_3"
:pre (and (and (<= 7.99638082926304e0 x) (<= x 8.00738125815121e0)) (and (<= 1.76791225927557e0 y) (<= y 1.77003311736055e0)))
(- (exp (* (- (- x 8.00000000000000e0)) (log y))) 1.00000000000000e0))
(FPCore (x y z)
:name "gsl_sf_hyperg_U_4"
:pre (and (and (<= -.738125815121293e-3 x) (<= x 7.38125815121293e-3)) (and (<= -.503690629075606e-1 y) (<= y -.496309370924394e-1)) (and (<= 1.00000000000075e1 z) (<= z 1.10000000000000e1)))
(- (exp (* x (log (+ y z)))) 1.00000000000000e0))
(FPCore (x y z a b c i j)
:name "gsl_sf_hyperg_U_5"
:pre (and (and (<= -.450888837869833e-4 x) (<= x 5.58231225993856e-4)) (and (<= 9.94199090258818e-1 y) (<= y 1.00729014791030e0)) (and (<= -.723738629373427e-3 z) (<= z 5.83475663779920e-3)) (and (<= 8.88178419700125e-16 a) (<= a 7.23738629373427e-3)) (and (<= -.450888837869833e-4 b) (<= b 5.58231225993856e-4)) (and (<= 9.94199090258818e-1 c) (<= c 1.00729014791030e0)) (and (<= -.723738629373427e-3 i) (<= i 5.83475663779920e-3)) (and (<= 8.88178419700125e-16 j) (<= j 7.23738629373427e-3)))
(- (log (/ (+ (+ x y) (* 5.00000000000000e-1 z)) a)) (log (/ (+ (+ b c) (* 5.00000000000000e-1 i)) j))))
(FPCore (x y z a b c)
:name "gsl_sf_hyperg_U_6"
:pre (and (and (<= 2.00000000000000e0 x) (<= x 4.03200000000000e4)) (and (<= 1.87251101115994e0 y) (<= y 2.14106659751380e0)) (and (<= -.819032453638258e-3 z) (<= z 5.83475663779964e-3)) (and (<= -.164493406684823e0 a) (<= a -.164487961487526e0)) (and (<= 5.58609959142140e-23 b) (<= b 6.70814160112705e-5)) (and (<= 7.47402140177655e-12 c) (<= c 8.19032453638258e-3)))
(- (- (- (- (log x) (* y z))) (log (+ (* a b) 1.00000000000000e0))) (log c)))
(FPCore (x y)
:name "gsl_sf_hyperg_U_7"
:pre (and (and (<= 1.00000000000000e0 x) (<= x 8.00000000000000e0)) (and (<= -.800723738629373e0 y) (<= y -.997784414099157e-1)))
(+ x y))
(FPCore (x y)
:name "gsl_sf_hyperg_U_8"
:pre (and (and (<= -.999999999999999e-1 x) (<= x -.596420151779409e-5)) (and (<= -.738125815121293e-3 y) (<= y 3.61917073695661e-3)))
(sin (* 3.14159265358979e0 (- (- 1.00000000000000e0 x) y))))
(FPCore (x)
:name "gsl_sf_hyperg_U_9"
:pre (and (<= -.999999999999999e-1 x) (<= x -.596420151779409e-5))
(sin (* 3.14159265358979e0 (- 1.00000000000000e0 x))))

(FPCore (x y z a b c i j k)
:name "gsl_sf_hyperg_2F0_0"
:pre (and (and (<= 2.13162820728030e-14 x) (<= x 7.38125814417856e-3)) (and (<= 1.00000000000000e0 y) (<= y 1.00122169575062e0)) (and (<= -.802998303816642e0 z) (<= z 1.00122601509448e0)) (and (<= 1.84963316462646e0 a) (<= a 1.87303334530454e0)) (and (<= -.477038855577474e-2 b) (<= b 6.94700318866807e-6)) (and (<= -.292181745998825e-3 c) (<= c 6.47319450354775e0)) (and (<= -.100882023699260e-1 i) (<= i 1.70954919653289e-2)) (and (<= -.600778579133704e0 j) (<= j -.599527303630917e0)) (and (<= -.155193806941695e-1 k) (<= k -.154928699681072e-1)))
(+ (+ z (+ (* a b) (- c i))) (* (- (- (- 2.00000000000000e0 j) (+ x x)) (/ -.100000000000000e0 k)) y)))
(FPCore (x y)
:name "gsl_sf_hyperg_2F0_1"
:pre (and (and (<= 2.00000000000000e0 x) (<= x 1.10000000000000e1)) (and (<= -.426326288703649e-4 y) (<= y 8.00778579133704e0)))
(tan (* 3.14159265358979e0 (+ x y))))
(FPCore (x y)
:name "gsl_sf_hyperg_2F0_2"
:pre (and (and (<= 7.99527303630917e0 x) (<= x 8.00778579133704e0)) (and (<= -.155193806941695e-1 y) (<= y -.154928699681072e-1)))
(- (exp (* (- (- x 8.00000000000000e0)) (log (/ -.100000000000000e0 y)))) 1.00000000000000e0))
(FPCore (x y z)
:name "gsl_sf_hyperg_2F0_3"
:pre (and (and (<= -.778579133703694e-3 x) (<= x 7.78579133703694e-3)) (and (<= -.503892895668518e-1 y) (<= y -.496107104331482e-1)) (and (<= 1.00000000000003e1 z) (<= z 1.10000000000000e1)))
(- (exp (* x (log (+ y z)))) 1.00000000000000e0))
(FPCore (x y z a b c)
:name "gsl_sf_hyperg_2F0_4"
:pre (and (and (<= 2.00000000000000e0 x) (<= x 4.03200000000000e4)) (and (<= 2.01556773021205e0 y) (<= y 2.14066524633466e0)) (and (<= -.404533192858381e-4 z) (<= z 1.10779294992014e-3)) (and (<= -.164493406684823e0 a) (<= a -.164493307067397e0)) (and (<= 6.27333746267957e-26 b) (<= b 1.22720521989276e-6)) (and (<= 2.50466314355435e-13 c) (<= c 1.10779294992014e-3)))
(- (- (- (- (log x) (* y z))) (log (+ (* a b) 1.00000000000000e0))) (log c)))
(FPCore (x y z)
:name "gsl_sf_hyperg_2F0_5"
:pre (and (and (<= 1.99638082925909e0 x) (<= x 8.00738125814418e0)) (and (<= 9.99595466807142e-1 y) (<= y 1.00110779294992e0)) (and (<= 7.99638082925909e0 z) (<= z 8.00738125814418e0)))
(- (+ x 1.00000000000000e0) (- 2.00000000000000e0 (- (+ 1.00000000000000e0 y) z))))
(FPCore (x y z)
:name "gsl_sf_hyperg_2F0_6"
:pre (and (and (<= 1.99638082925909e0 x) (<= x 8.00738125814418e0)) (and (<= 9.99595466807142e-1 y) (<= y 1.00110779294992e0)) (and (<= 7.99638082925909e0 z) (<= z 8.00738125814418e0)))
(- (- 2.00000000000000e0 (- (+ 1.00000000000000e0 y) z)) (+ x x)))
(FPCore (x y)
:name "gsl_sf_hyperg_2F0_7"
:pre (and (and (<= 1.00000000000000e0 x) (<= x 8.00000000000000e0)) (and (<= -.800040453319286e0 y) (<= y -.992618741855821e-1)))
(+ x y))
(FPCore (x)
:name "gsl_sf_hyperg_2F0_8"
:pre (and (<= 7.99527303630917e0 x) (<= x 8.00778579133704e0))
(- x (floor (+ x 5.00000000000000e-1))))
(FPCore (x y)
:name "gsl_sf_hyperg_2F0_9"
:pre (and (and (<= -.999999999999979e-1 x) (<= x -.426326288703649e-4)) (and (<= -.778579133703694e-3 y) (<= y 3.58934973299441e-3)))
(sin (* 3.14159265358979e0 (- (- 1.00000000000000e0 x) y))))
(FPCore (x)
:name "gsl_sf_hyperg_2F0_10"
:pre (and (<= -.999999999999979e-1 x) (<= x -.426326288703649e-4))
(sin (* 3.14159265358979e0 (- 1.00000000000000e0 x))))
(FPCore (x)
:name "gsl_sf_hyperg_2F0_11"
:pre (and (<= 7.99527303630917e0 x) (<= x 8.00778579133704e0))
(- x (floor (+ x 5.00000000000000e-1))))

